@{ 
    ViewData["Title"] = "Independent Project";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
   

    .text{
    top:100px;
    left: 200px;
    position: absolute;
    font-size: 55px;
    }
    .hello{
    top:200px;
    left: 200px;
    position: absolute;
    text-align: justify;
    margin-right: 45%;
    }
    .legend{

    }

</style>
   
    <div id="map-canvas" style="opacity: 0.8;">
        <h1 class="text">Refugee Awareness: Visualizing the crisis</h1>
            <h4 class="hello">
                By the end of 2015, a record high of 65.3 million individuals were forcibly displaced from their homes as a result of persecution, conflict, generalized violence, or human rights violations. When they cross international borders, they are called refugees. Refugee Awareness goal is to provide a narrative of refugee migration via data visualization. The information provided is based on data published by the <strong>United Nations Refugee Agency (UNHCR).</strong> The bubbles displayed on this map symbolize current countries with a significant displaced population.
            </h4>
        

    </div>
    <div id="title"></div>
    <script>

      
   d3.csv("https://gist.githubusercontent.com/SamiAljamal/fa10672fd0f01f8199caa6f2f50431bc/raw/50edc161262b02c4f2ebd2470251f151c7cdf9f8/unhcr_2014_data",function(d){
       var dataset = [];
       var onlyValues =[];

     var map = new Datamap({ 
        element: document.getElementById("map-canvas"),
        projection: 'mercator',
        geographyConfig: {
        popupOnHover: false,
        highlightOnHover: false
    },
        fills: {
            defaultFill: '#f2f2f2',
            'other': 'red'
        }
       
        
    });
           
       Object.keys(d).map(function(key){
           onlyValues.push(parseInt(d[key]["refugees"]))
       });
       console.log(onlyValues);
       var minValue = Math.min.apply(null, onlyValues);
        var maxValue = Math.max.apply(null, onlyValues);

         var sizeScale = d3.scale.linear()
              .domain([minValue, maxValue])
              .range([10, 45]);

              Object.keys(d).forEach(function(key){
                  var refugees= parseInt(d[key]["refugees"]);
                  dataset.push(
                      {
                          country: d[key]["Origin"],
                          centered: d[key]["country_code"],
                          fillKey: "other",
                          population: refugees,
                          radius: sizeScale(refugees)
                      }
                  )
              });
       map.bubbles(dataset, {
        popupTemplate:function (geography, data) { 
             return ['<div class="hoverinfo"><strong>' +  data.country + '</strong>',
            '<br/>Refugees: ' +  data.population +
            '</div>'].join('');
        }
   
       });
   });
    </script>