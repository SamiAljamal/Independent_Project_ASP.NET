@{
    ViewData["Title"] = "Independent Project";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model IEnumerable<IndependentProject.Models.Settlement>

<h2>United Nations High Commissioner for Refugees crisis areas </h2>
<hr/>
<form action="settlementResult" class="results">
    <select name="name" id="name">
        <option value="car">Central African Republic</option>
        <option value="burundi">Burundi</option>
        <option value="cotedivoire">Ivory Coast</option>
        <option value="horn">Somalia </option>
        <option value="liberia">Liberia</option>
        <option value="southsudan">South Sudan</option>
        <option value="syria">Syria</option>
    </select>

    <input type="submit" value="send" />
</form>


    
<table class="columns">
    <tr>
        <td><div id="set-map"></div></td>
        <td><div id="table_div"></div></td>
    </tr>
    <tr>
        <td><div id="map-s"></div></td>
        <td><div id="map-a"></div></td>
    </tr>
</table>
   

    <script>
        
        function charts(data)
        {
            var jsonData = data;
            google.charts.load("visualization", "1", { packages: ["corechart", "bar"] });
            google.charts.setOnLoadCallback(drawPie);
            google.charts.setOnLoadCallback(drawBar);
            function drawPie() {
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Name');
                data.addColumn('number', 'Population');
                
                for (i = 0; i < jsonData.length; i++) {
                    var name = jsonData[i].name
                    

                    var population = parseInt(jsonData[i].population[0].value);
                    data.addRows([[name, population]]);
                }
                
                   var chart = new google.visualization.PieChart(document.getElementById('map-s'));
                chart.draw(data);
            }
            function drawBar() {
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Country');
                data.addColumn('number', "Female under 4");
                data.addColumn('number', "Male under 4");
                data.addColumn('number', "Female 5-11");
                data.addColumn('number', "Male 5-11");
                data.addColumn('number', "Female 12-17");
                data.addColumn('number', "Male 12-17");
                data.addColumn('number', "Female 18-59");
                data.addColumn('number', "Male 18-59");
                data.addColumn('number', "Female 60+");
                data.addColumn('number', "Male 60+");
                var f04;
                var m04;
                var f511;
                var m511;
                var f1217;
                var m1217;
                var f1859;
                var m1859;
                var f60;
                var m60;
                for (i = 0; i < jsonData.length; i++) {
                    var name = jsonData[i].name;
                    for (j = 0; j < jsonData[i].population.length; j++)
                    {
                        
                        if (jsonData[i].population[j].demography !== undefined) {
                            f04 = parseInt(jsonData[i].population[j].demography["04F"]);
                            m04 = parseInt(jsonData[i].population[j].demography["04M"]);
                            f511 = parseInt(jsonData[i].population[j].demography["511F"]);
                            m511 = parseInt(jsonData[i].population[j].demography["511M"]);
                            f1217 = parseInt(jsonData[i].population[j].demography["1217F"]);
                            m1217 = parseInt(jsonData[i].population[j].demography["1217M"]);
                            f1859 = parseInt(jsonData[i].population[j].demography["1859F"]);
                            m1859 = parseInt(jsonData[i].population[j].demography["1859M"]);
                            m60 = parseInt(jsonData[i].population[j].demography["60M"]);
                            f60 = parseInt(jsonData[i].population[j].demography["60F"]);

                        }
                       
                    }
                    data.addRows([[name, f04, m04, f511, m511, f1217, m1217, f1859, m1859, m60, f60]])

                }
                var chart = new google.charts.Bar(document.getElementById('map-a'));
                chart.draw(data);
            }
          
           
         

        }

        function map(data)
        {
            var jsonData = data;
            google.charts.load("visualization", "1", { packages: ["geochart", "table"] });
            google.charts.setOnLoadCallback(drawMap);
            google.charts.setOnLoadCallback(drawTable);

            function drawMap() {
                var data = new google.visualization.DataTable();
                data.addColumn('number', 'Latitude');
                data.addColumn('number', 'Longitude');
                data.addColumn('string', 'Name');
                data.addColumn('number', 'Value');

                var value;
                for (i = 0; i < jsonData.length; i++) {
                    var name = jsonData[i].name;
                    var country = jsonData[i].country;
                    var latitude = parseFloat(jsonData[i].latitude);
                    var longitude = parseFloat(jsonData[i].longitude);
                    for (j = 0; j < jsonData[i].population.length; j++) {

                        if (jsonData[i].population[j] !== undefined) {
                           value= parseInt(jsonData[i].population[j].value)

                        }
                    }
                    data.addRows([[latitude, longitude, name, value]]);
                    value = 0;
                }
                var mapZoom;
                if ($("#name").val() === "syria")
                {
                    mapZoom = '145';

                }
                else {
                    mapZoom ='002'

                }
                var options = {
                    displayMode: 'markers',
                    region: mapZoom,
                    colorAxis: {colors: ['green', 'blue']}
                };
                var map = new google.visualization.GeoChart(document.getElementById('set-map'));
                map.draw(data, options);

            }
            function drawTable() {
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Refugee Camp');
                data.addColumn('string', 'Country');
                data.addColumn('number', 'Population');
                data.addColumn('string', 'Last update');
                data.addColumn('string', 'Website');
                var value;
                var url;
                var update;
                for (i = 0; i < jsonData.length; i++) {
                    var name = jsonData[i].name;
                    var country = jsonData[i].country;
                    for (j = 0; j < jsonData[i].population.length; j++) {

                        if (jsonData[i].population[j] !== undefined) {
                            value = parseInt(jsonData[i].population[j].value)
                            url = jsonData[i].population[j].url;
                            update = jsonData[i].population[j].updated_at;
                        }
                    }
                    data.addRows([[name,country,value,update,url]]);
                    value = 0;
                    url = "";
                    update = "";
                }
                var tabs = new google.visualization.Table(document.getElementById('table_div'));

                tabs.draw(data, { showRowNumber: true, width: '100%', height: '100%' });

            }
            
        }
       

        $('.results').submit(function (event) {
            event.preventDefault();
            var info = $("#name").val();
            var name = info.split("||")[0];
            var instance_id = info.split("||")[1];
            $.ajax({
                url: "http://data.unhcr.org/api/population/countries.json?instance_id=" + name,
                type: 'GET',
                cache: true,
                success: function (res) {
                    charts(res);
                   
                    console.log(res);
                }

            });
            $.ajax({
                url: "http://data.unhcr.org/api/population/settlements.json?instance_id=" + name,
                type: 'GET',
                cache: true,
                success: function (set) {
                    console.log(set);
                    map(set)
                }

            });

        });
       
    </script>
